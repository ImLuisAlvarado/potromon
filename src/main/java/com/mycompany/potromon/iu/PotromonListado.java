/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.potromon.iu;

import com.mycompany.potromon.entidades.Potromon;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author darkheaven
 */
public class PotromonListado extends javax.swing.JFrame {

    /**
     * Creates new form PotromonListado
     */
    public PotromonListado() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPotromones = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnInformacion = new javax.swing.JButton();
        buttonEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEntrenadores = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tblPotromones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Apodo", "Tipo", "Habilidad Principal", "Puntaje", "Entrenador"
            }
        ));
        jScrollPane1.setViewportView(tblPotromones);
        if (tblPotromones.getColumnModel().getColumnCount() > 0) {
            tblPotromones.getColumnModel().getColumn(4).setPreferredWidth(220);
            tblPotromones.getColumnModel().getColumn(6).setPreferredWidth(140);
        }

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnInformacion.setText("Más información...");
        btnInformacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInformacionActionPerformed(evt);
            }
        });

        buttonEliminar.setText("Eliminar");
        buttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEntrenadores.setText("Entrenadores");
        btnEntrenadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrenadoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(btnEntrenadores)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                .addComponent(btnAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(btnInformacion)
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInformacion)
                    .addComponent(btnAgregar)
                    .addComponent(buttonEliminar)
                    .addComponent(btnEditar)
                    .addComponent(btnEntrenadores))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        cargarTable();
        tblPotromones.removeColumn(tblPotromones.getColumnModel().getColumn(0));
    }//GEN-LAST:event_formWindowOpened

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        PotromonForm form = new PotromonForm(this, true, 0);
        form.setVisible(true);
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void buttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminarActionPerformed
       // TODO add your handling code here:
       // Obtener la fila seleccionada
    int renglon = tblPotromones.getSelectedRow();

    // Validar si se ha seleccionado una fila
    if (renglon == -1) {
        JOptionPane.showMessageDialog(this, 
                "Por favor, selecciona un registro para eliminar.",
                "Error", 
                JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        // Obtener el ID del Potromon desde la columna 0 de la fila seleccionada
        int idPotromon = Integer.parseInt(tblPotromones.getModel().getValueAt(renglon, 0).toString());

        // Confirmar la eliminación
        int confirmacion = JOptionPane.showConfirmDialog(this, 
                "¿Está seguro que desea eliminar el registro?", 
                "Eliminar", 
                JOptionPane.YES_NO_OPTION);

        if (confirmacion == JOptionPane.YES_OPTION) {
            // Llamar al método de eliminación
            if (Potromon.delete(idPotromon)) {
                JOptionPane.showMessageDialog(this, 
                        "El registro se eliminó con éxito.",
                        "Registro eliminado", 
                        JOptionPane.INFORMATION_MESSAGE);

                // Recargar la tabla
                cargarTable();
            } else {
                JOptionPane.showMessageDialog(this, 
                        "Ocurrió un error al eliminar el registro.",
                        "Error", 
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    } catch (NumberFormatException e) {
        // Manejo de error si el valor de la columna 0 no es un número válido
        JOptionPane.showMessageDialog(this, 
                "El valor del ID no es válido.",
                "Error", 
                JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        // Manejo de errores inesperados
        JOptionPane.showMessageDialog(this, 
                "Ocurrió un error inesperado: " + e.getMessage(),
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
    }//GEN-LAST:event_buttonEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        int renglon = tblPotromones.getSelectedRow();
        int idPotromon = Integer.parseInt(tblPotromones.getModel().getValueAt(renglon, 0).toString());
        
        PotromonForm form = new PotromonForm(this, true, idPotromon);
        form.setVisible(true);
        
        cargarTable();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnInformacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInformacionActionPerformed
    int selectedRow = tblPotromones.getSelectedRow();
        if (selectedRow != -1) {
            int idPotromon = Integer.parseInt(tblPotromones.getModel().getValueAt(selectedRow, 0).toString()); // Solo el ID
            Potromon potromon = Potromon.findById(idPotromon); // Buscar el objeto Potromon por ID
            if (potromon != null) {
                // Ahora puedes abrir la ventana de información con el objeto Potromon
                InfoPotromon info = new InfoPotromon(this, true, potromon);
                info.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró el Potromon.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona un Potromon.");
        }

    }//GEN-LAST:event_btnInformacionActionPerformed

    private void btnEntrenadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrenadoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEntrenadoresActionPerformed

    
    
    
    private void cargarTable() {
    List<Potromon> potromones = Potromon.getAll(); // Obtener la lista de Potromones
    DefaultTableModel modeloTabla = (DefaultTableModel) tblPotromones.getModel();
    modeloTabla.setRowCount(0); // Limpiar la tabla antes de llenarla
    for (Potromon p : potromones) {
        modeloTabla.addRow(new Object[]{
            p.getId(),
            p.getNombre(),
            p.getApodo(),
            p.getTipo(),
            p.getHabilidadPrincipal(),
            p.getPuntajeBatalla(),
            p.getEntrenador()
        });
    }
}
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PotromonListado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PotromonListado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PotromonListado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PotromonListado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PotromonListado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEntrenadores;
    private javax.swing.JButton btnInformacion;
    private javax.swing.JButton buttonEliminar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPotromones;
    // End of variables declaration//GEN-END:variables
}
